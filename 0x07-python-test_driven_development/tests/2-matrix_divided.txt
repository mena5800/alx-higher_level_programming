
==============================
How to Use 2-matrix_divide.py
==============================

this module defines an matrix division by number ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided()```
return new matrix = old one / div

::
	divided by int

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

	>>> matrix_divided([[1,2],[1,2]],1)
	[[1.0, 2.0], [1.0, 2.0]]

::

	divided by negative int
	>>> matrix_divided([[1,2],[1,2]],-1)
	[[-1.0, -2.0], [-1.0, -2.0]]

::

	divided by float
	>>> matrix_divided([[1,2],[1,2]],1.0)
	[[1.0, 2.0], [1.0, 2.0]]


::

	divided by negative float
	>>> matrix_divided([[1,2],[1,2]],-1.0)
	[[-1.0, -2.0], [-1.0, -2.0]]


::

	divided by zero
	>>> matrix_divided([[1,2],[1,2]],0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

::

	contain string in cell
	>>> matrix_divided([[1,"2"],[1,2]],1)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	contain None in cell
	>>> matrix_divided([[1,None],[1,2]],1)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	not the same number of element in row
	>>> matrix_divided([[1,2,3],[1,2]],1)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

::

	first argument None not matrix
	>>> matrix_divided(None,1)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	second argument None not int
	>>> matrix_divided([[1,2],[1,5]],None)
	Traceback (most recent call last):
	TypeError: div must be a number

::




